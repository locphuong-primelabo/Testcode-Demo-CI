# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # - image: cimg/php:8.1.7
      # - image: circleci/php:7.2-apache-stretch-node-browsers
      # - image: mysql:5.7
      # - image: circleci/mysql:5.7
      - image: circleci/php:8
      # - image: circleci/mysql:5.7
        # environment:
        #   MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        #   MYSQL_DATABASE: laravel
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: laravel
          MYSQL_USER: root
          MYSQL_PASSWORD:
        #   MYSQL_ROOT_PASSWORD:
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: sudo apt update
      - run: sudo apt-get install mariadb-server
      - run: sudo systemctl status mariadb
      # - run: sudo docker-php-ext-configure intl
      # - run: sudo docker-php-ext-install intl
      # - run: sudo docker-php-ext-install pdo_mysql

      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - run: php --version
      - run: mysql -V
      - run: mysql -h localhost -u root -e"quit"
      - run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - run: composer update
      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - run: php artisan key:generate
      - run: chmod -R 777 storage bootstrap/cache
      - run: mkdir -p database
      - run:  touch database/laravel.sqlite 
      - run: php artisan cache:clear
      - run: php artisan config:clear

      # - run:
      #     name: Check PhpUnit
      #     command: ./vendor/bin/phpunit

      - run: php artisan migrate --seed
      - run: php artisan test --testsuite=Feature 
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello