# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # - image: circleci/php:8
      # - image: circleci/mysql:5.7
      - image: wurzag/php8-mysql
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: laravel

    steps:
      - checkout
      - run:
          name: Initialize for unit test
          command: |
            sudo mysql -v
            sudo docker-php-ext-install pdo_mysql
            sudo docker-php-ext-enable pdo_mysql
            echo -e "127.0.0.1 db" | sudo tee -a /etc/hosts
            echo 'memory_limit = -1' | sudo tee -a /usr/local/etc/php/conf.d/docker-php-memlimit.ini
      - run:
          name: Wait untill MySQL is ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z db 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run: 
          name: Create database
          command: |
            mkdir -p database
            touch database/laravel.sqlite 

      - run: 
          name: Create file env
          command: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - run: 
          name: Run composer
          command: |
            composer update
            composer install

      - run: php artisan migrate:fresh --seed 
      - run: php artisan key:generate
      # - run: chmod -R 777 storage bootstrap/cache

      - run: 
          name: Execute unit test
          command: php artisan test --testsuite=Feature 'tests/Feature/Http/Controllers/PostControllerTest.php'
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello